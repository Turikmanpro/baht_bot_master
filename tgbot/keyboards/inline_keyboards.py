from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from tgbot.misc import callbacks


def get_back_keyboard(to='main_menu', payload=''):
    keyboard = InlineKeyboardMarkup()

    keyboard.add(
        InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to=to, payload=payload))
    )

    return keyboard


def get_withdrawal_keyboard(withdrawal_type: str):
    keyboard = InlineKeyboardMarkup()

    keyboard.add(
        InlineKeyboardButton('–í—ã–≤–µ—Å—Ç–∏',
                             callback_data=callbacks.navigation.new(to='withdraw_confirm', payload=withdrawal_type))
    )

    keyboard.add(
        InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to='stats', payload=''))
    )

    return keyboard


def get_reviews_keyboard(is_admin: bool, is_completed_deal: bool):
    keyboard = InlineKeyboardMarkup()

    if is_admin:
        keyboard.add(
            InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –æ—Ç–∑—ã–≤', callback_data='pass')
        )

    if is_completed_deal:
        keyboard.add(
            InlineKeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', callback_data='pass')
        )

    return keyboard


def get_bank_choose_keyboard(operation_type, back_to, payload='', back_payload=''):
    keyboard = InlineKeyboardMarkup(row_width=1)

    keyboard.add(
        InlineKeyboardButton('–¢–∏–Ω—å–∫–æ—Ñ—Ñüè¶', callback_data=callbacks.bank_choose.new(bank='–¢–∏–Ω—å–∫–æ—Ñ—Ñ', type=operation_type,
                                                                                  payload=payload)),
        InlineKeyboardButton('–°–±–µ—Äüè¶', callback_data=callbacks.bank_choose.new(bank='–°–±–µ—Ä', type=operation_type,
                                                                              payload=payload)),
        InlineKeyboardButton('–†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ωüè¶',
                             callback_data=callbacks.bank_choose.new(bank='–†–∞–π—Ñ—Ñ–∞–π–∑–µ–Ω', type=operation_type,
                                                                     payload=payload)),
        InlineKeyboardButton('–î—Ä—É–≥–æ–µ', callback_data=callbacks.bank_choose.new(bank='–î—Ä—É–≥–æ–π', type=operation_type,
                                                                               payload=payload)),
        InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to=back_to, payload=back_payload))
    )

    return keyboard


def get_operators_keyboard(operators, is_active):
    keyboard = InlineKeyboardMarkup(row_width=2)

    if is_active:
        action = 'delete'
    else:
        action = 'appoint'

    buttons = list()
    for operator in operators:
        buttons.append(
            InlineKeyboardButton(operator.user.name,
                                 callback_data=callbacks.operator_choose.new(id=operator.telegram_id, action=action))
        )
    keyboard.add(*buttons)

    keyboard.add(
        InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to='operators', payload='menu'))
    )

    return keyboard


def get_operator_keyboard(operator_id, action):
    keyboard = InlineKeyboardMarkup(row_width=1)

    if action == 'delete':
        payload = 'active'
        keyboard.add(
            InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data=callbacks.operator_update.new(id=operator_id, action=action))
        )
    elif action == 'appoint':
        payload = 'deleted'
        keyboard.add(
            InlineKeyboardButton('–ù–∞–∑–Ω–∞—á–∏—Ç—å',
                                 callback_data=callbacks.operator_update.new(id=operator_id, action=action))
        )

    keyboard.add(
        InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to='operators', payload=payload))
    )

    return keyboard


def get_referral_level_choose_keyboard(referrals, action, back_to='', back_payload=''):
    keyboard = InlineKeyboardMarkup(row_width=1)

    for referral in referrals:
        keyboard.add(
            InlineKeyboardButton(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ {referral.user.name}',
                                 callback_data=callbacks.referral_level_choose.new(level=referral.id, action=action))
        )

    if back_to:
        keyboard.add(
            InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to=back_to, payload=back_payload))
        )

    return keyboard


def get_referral_type_choose_keyboard(level):
    keyboard = InlineKeyboardMarkup(row_width=1)

    keyboard.add(
        InlineKeyboardButton('–ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã',
                             callback_data=callbacks.navigation.new(to='active_refs', payload=level)),
        InlineKeyboardButton('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã',
                             callback_data=callbacks.navigation.new(to='block_refs', payload=level)),
        InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to='referrals', payload='lvl'))
    )

    return keyboard


def get_referral_choose_keyboard(referrals, action='oper', level=None):
    keyboard = InlineKeyboardMarkup(row_width=1)

    for referral in referrals:
        keyboard.add(
            InlineKeyboardButton(f'{referral.user.name}',
                                 callback_data=callbacks.referral_choose.new(id=referral.telegram_id, action=action))
        )

    if action == 'oper':
        keyboard.add(
            InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to='operators', payload='menu'))
        )
    else:
        keyboard.add(
            InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.referral_level_choose.new(level=level, action='ref'))
        )

    return keyboard


def get_referral_info_keyboard(is_active: bool, level, ref_id):
    keyboard = InlineKeyboardMarkup()

    if is_active:
        to = 'active_refs'
        keyboard.add(InlineKeyboardButton('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', callback_data=callbacks.referral_update.new(id=ref_id)))
    else:
        to = 'block_refs'
        keyboard.add(InlineKeyboardButton('–†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', callback_data=callbacks.referral_update.new(id=ref_id)))

    keyboard.add(
        InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to=to, payload=level))
    )

    return keyboard


def get_referral_update_keyboard(referral_id, is_active: bool, level):
    keyboard = InlineKeyboardMarkup(row_width=1)

    if is_active:
        keyboard.add(
            InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å',
                                 callback_data=callbacks.operator_update.new(id=referral_id, action='delete'))
        )
    else:
        keyboard.add(
            InlineKeyboardButton('–ù–∞–∑–Ω–∞—á–∏—Ç—å',
                                 callback_data=callbacks.operator_update.new(id=referral_id, action='active'))
        )

    keyboard.add(
        InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.referral_level_choose.new(level=level, action='oper'))
    )

    return keyboard


def get_order_confirm_keyboard(order_id):
    keyboard = InlineKeyboardMarkup()

    keyboard.add(
        InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
                             callback_data=callbacks.operator_order.new(action='confirm', order_id=order_id))
    )

    return keyboard


def get_reviews_link_keyboard(url):
    keyboard = InlineKeyboardMarkup()

    keyboard.add(
        InlineKeyboardButton('–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', url=url)
    )

    return keyboard


referral_menu = InlineKeyboardMarkup(row_width=1)
referral_menu.add(
    InlineKeyboardButton('–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?', callback_data=callbacks.navigation.new(to='how_works', payload='')),
    InlineKeyboardButton('–ú–æ—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞', callback_data=callbacks.navigation.new(to='ref_link', payload='')),
    InlineKeyboardButton('–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data=callbacks.navigation.new(to='stats', payload=''))
)

statistics_menu = InlineKeyboardMarkup(row_width=1)
statistics_menu.add(
    InlineKeyboardButton('–í—ã–≤–µ—Å—Ç–∏ –¥–∏–≤–∏–¥–µ–Ω–¥—ã',
                         callback_data=callbacks.navigation.new(to='ref_withdrawal_menu', payload='')),
    InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to='ref_menu', payload=''))
)

referral_withdrawal_menu = InlineKeyboardMarkup(row_width=1)
referral_withdrawal_menu.add(
    InlineKeyboardButton('–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º –Ω–∞–ª–∏—á–Ω—ã–º–∏ –≤ THB (–ë–∞—Ç–∞—Ö)',
                         callback_data=callbacks.navigation.new(to='withdraw', payload='courier')),
    InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –Ω–∞ –†—É—Å—Å–∫–∏–π —Å—á–µ—Ç –≤ RUB (–†—É–±–ª—è—Ö)',
                         callback_data=callbacks.navigation.new(to='withdraw', payload='rub')),
    InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –Ω–∞ –∫—Ä–∏–ø—Ç–æ —Å—á–µ—Ç –≤ USDT',
                         callback_data=callbacks.navigation.new(to='withdraw', payload='usdt')),
    InlineKeyboardButton('–ü–æ–ª—É—á–∏—Ç—å –Ω–∞ –¢–∞–π—Å–∫–∏–π —Å—á–µ—Ç –≤ THB (–ë–∞—Ç–∞—Ö)',
                         callback_data=callbacks.navigation.new(to='withdraw', payload='thb')),
    InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to='stats', payload=''))
)

token_choose = InlineKeyboardMarkup(row_width=1)
token_choose.add(
    InlineKeyboardButton('TRC20', callback_data=callbacks.token_choose.new(token='TRC20', payload='')),
    InlineKeyboardButton('ERC20', callback_data=callbacks.token_choose.new(token='ERC20', payload='')),
    InlineKeyboardButton('BEP20', callback_data=callbacks.token_choose.new(token='BEP20', payload='')),
    InlineKeyboardButton('BINANCE PAY ID',
                         callback_data=callbacks.token_choose.new(token='BINANCE PAY ID', payload='')),
    InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to='withdraw', payload='usdt'))
)



operators_menu = InlineKeyboardMarkup(row_width=1)
operators_menu.add(
    InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞', callback_data=callbacks.navigation.new(to='operators', payload='add')),
    InlineKeyboardButton('–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã',
                         callback_data=callbacks.navigation.new(to='operators', payload='active')),
    InlineKeyboardButton('–£–¥–∞–ª–µ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã',
                         callback_data=callbacks.navigation.new(to='operators', payload='deleted')),
    InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to='admin_menu', payload=''))
)

settings = InlineKeyboardMarkup(row_width=1)
settings.add(
    InlineKeyboardButton('–î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º', callback_data=callbacks.navigation.new(to='delivery_upd', payload='')),
    InlineKeyboardButton('–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ —Å—á—ë—Ç', callback_data=callbacks.navigation.new(to='transfer_upd', payload='')),
    InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to='admin_menu', payload=''))
)

admin_stats = InlineKeyboardMarkup()
admin_stats.row(
    InlineKeyboardButton('–ò–†0', callback_data=callbacks.navigation.new(to='ir_stats', payload=0)),
    InlineKeyboardButton('–ò–†1', callback_data=callbacks.navigation.new(to='ir_stats', payload=1)),
    InlineKeyboardButton('–ò–†2', callback_data=callbacks.navigation.new(to='ir_stats', payload=2)),
    InlineKeyboardButton('–ò–†3', callback_data=callbacks.navigation.new(to='ir_stats', payload=3))
)
admin_stats.add(
    InlineKeyboardButton('–û—Ç—á—ë—Ç–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã', callback_data=callbacks.navigation.new(to='years', payload='ref')),
    InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new(to='admin_menu', payload=''))
)

admin_menu = InlineKeyboardMarkup(row_width=1)
admin_menu.add(
    InlineKeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data=callbacks.navigation.new(to='admin_stats', payload='')),
    InlineKeyboardButton('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', callback_data=callbacks.navigation.new(to='referrals', payload='lvl')),
    InlineKeyboardButton('–û–ø–µ—Ä–∞—Ç–æ—Ä—ã', callback_data=callbacks.navigation.new(to='operators', payload='menu')),
    InlineKeyboardButton('–ü–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∏', callback_data=callbacks.navigation.new(to='movers', payload=''))
    # InlineKeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data=callbacks.navigation.new(to='admin_settings', payload=''))
)

cancel_scan = InlineKeyboardMarkup()
cancel_scan.add(
    InlineKeyboardButton('–û—Ç–º–µ–Ω–∞ –≤–≤–æ–¥–∞ —Å–∫–∞–Ω–∞', callback_data='cancel_scan')
)


def get_admin_stat(referrals, start_day):
    keyboard = InlineKeyboardMarkup(row_width=1)

    for referral in referrals:
        keyboard.add(
            InlineKeyboardButton(referral.user.name, callback_data=callbacks.admin_stat.new(referral.id, start_day))
        )

    keyboard.add(
        InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data=callbacks.navigation.new('admin_menu', ''))
    )

    return keyboard


order_calc = InlineKeyboardMarkup()
order_calc.add(
    InlineKeyboardButton('–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å–¥–µ–ª–∫–∏', callback_data=callbacks.navigation.new('make_ex', ''))
)
